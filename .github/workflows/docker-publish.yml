name: build and push Docker images

on:
  release:
    types: [published]

jobs:
  base:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v2
      - name: login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: build and push
        uses: docker/build-push-action@v3
        with:
          context: ./base
          push: true
          tags: |
            brineylab/base:latest
            brineylab/base:${{ github.event.release.tag_name }}

  # ------------------
  #     JUPYTER
  # ------------------

  # jupyter image depends on base, and need to wait for base to proceed
  jupyter:
    runs-on: ubuntu-latest
    needs: [base]

    permissions:
      contents: read
      packages: write

    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v2
      - name: login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: build and push
        uses: docker/build-push-action@v3
        with:
          context: ./jupyter
          push: true
          tags: |
            brineylab/jupyter:latest
            brineylab/jupyter:${{ github.event.release.tag_name }}

  # jupyter-plus images depend on jupyter, but can be built in parallel
  jupyter-plus:
    runs-on: ubuntu-latest
    needs: [jupyter]

    strategy:
      fail-fast: false
      matrix:
        include:
          - context: ./jupyter-abx
            image_name: jupyter-abx

    permissions:
      contents: read
      packages: write

    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v2
      - name: login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: build and push
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.context }}
          push: true
          tags: |
            brineylab/${{ matrix.image_name }}:latest
            brineylab/${{ matrix.image_name }}:${{ github.event.release.tag_name }}

  # jupyter-abx-plus images depend on jupyter, but can be built in parallel
  jupyter-abx-plus:
    runs-on: ubuntu-latest
    needs: [jupyter-plus]

    strategy:
      fail-fast: false
      matrix:
        include:
          - context: ./jupyter-abx-pyspark
            image_name: jupyter-abx-pyspark

    permissions:
      contents: read
      packages: write

    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v2
      - name: login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: build and push
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.context }}
          push: true
          tags: |
            brineylab/${{ matrix.image_name }}:latest
            brineylab/${{ matrix.image_name }}:${{ github.event.release.tag_name }}

  # ------------------
  #    CODESERVER
  # ------------------

  # codeserver image depends on base
  codeserver:
    runs-on: ubuntu-latest
    needs: [base]

    permissions:
      contents: read
      packages: write

    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v2
      - name: login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: build and push
        uses: docker/build-push-action@v3
        with:
          context: ./codeserver
          push: true
          tags: |
            brineylab/codeserver:latest
            brineylab/codeserver:${{ github.event.release.tag_name }}

  # # codeserver-plus images depend on codeserver, but can be built in parallel with each other
  # codeserver-plus:
  #   runs-on: ubuntu-latest
  #   needs: [codeserver]

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include:
  #         - context: ./codeserver-python
  #           image_name: codeserver-python

  #   permissions:
  #     contents: read
  #     packages: write

  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v3
  #     - name: set up QEMU
  #       uses: docker/setup-qemu-action@v2
  #     - name: set up docker buildx
  #       uses: docker/setup-buildx-action@v2
  #     - name: login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: build and push
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: ${{ matrix.context }}
  #         push: true
  #         tags: |
  #           brineylab/${{ matrix.image_name }}:latest
  #           brineylab/${{ matrix.image_name }}:${{ github.event.release.tag_name }}
